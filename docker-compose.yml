version: "3.7"

volumes:
  auth_data: {}
  inventory_data: {}

networks:
  postman:
    name: postman
    driver: bridge


services:


# Auth Service and postgress database ------------------------------
  auth-db:
    image: postgres:9.6
    container_name: auth-db
    restart: on-failure
    networks:
      - postman
    volumes:
      - auth_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: auth
      POSTGRES_PASSWORD: auth
      POSTGRES_DB: auth
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "auth"]
      interval: 30s
      timeout: 30s
      retries: 3

  auth-prepare:
    build:
      context: ./auth
      dockerfile: Dockerfile   
    command: npx prisma migrate dev --name init
    environment:
      DATABASE_URL: postgresql://auth:auth@host.docker.internal:5433/auth?schema=public
    networks:
      - postman
    restart: on-failure
    depends_on:
      - auth-db

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    image: auth
    container_name: auth
    restart: on-failure
    ports: 
      - "4005:4005"
    environment:
      DATABASE_URL: postgresql://auth:auth@host.docker.internal:5433/auth?schema=public
    depends_on:
      - auth-db
      - auth-prepare
    volumes:
      - ./auth:/app
      - /app/node_modules
    networks:
      - postman
  



# Inventory Service and postgress database ------------------------------
  inventory-db:
    image: postgres:9.6
    container_name: inventory-db
    restart: on-failure
    networks:
      - postman
    volumes:
      - inventory_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: inventory
      POSTGRES_PASSWORD: inventory
      POSTGRES_DB: inventory
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "auth"]
      interval: 30s
      timeout: 30s
      retries: 3

  inventory-prepare:
    build:
      context: ./inventory
      dockerfile: Dockerfile   
    command: npx prisma migrate dev --name init
    environment:
      DATABASE_URL: postgresql://inventory:inventory@host.docker.internal:5434/inventory?schema=public
    networks:
      - postman
    restart: on-failure
    depends_on:
      - inventory-db

  inventory:
    build:
      context: ./inventory
      dockerfile: Dockerfile
    image: inventory
    container_name: inventory
    restart: on-failure
    ports: 
      - "4001:4001"
    environment:
      DATABASE_URL: postgresql://inventory:inventory@host.docker.internal:5434/inventory?schema=public
    depends_on:
      - inventory-db
      - inventory-prepare
    volumes:
      - ./inventory:/app
      - /app/node_modules
    networks:
      - postman
  
